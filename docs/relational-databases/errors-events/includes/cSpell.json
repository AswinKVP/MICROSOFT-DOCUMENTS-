{
    "version": "0.2",
    "language": "en",
    "words": [
        "addextendedproperty",
        "addlinkedserver",
        "ATTRIBUTENAME",
        "BATCHID",
        "binarychecksum",
        "blittable",
        "CHECKTABLE",
        "clflush",
        "CLOB",
        "Columnstore",
        "Compflags",
        "createorphan",
        "cursoropen",
        "datafiletype",
        "datetimeoffset",
        "dbobject",
        "DCOM",
        "docid",
        "Dpages",
        "dropextendedproperty",
        "EDGETABLE",
        "emptiable",
        "entitize",
        "ERRORFILE",
        "failpoint",
        "FIELDTERMINATOR",
        "filegroup",
        "filegroups",
        "FILESTREAM",
        "finalizer",
        "Finalizers",
        "FORCEPLAN",
        "FORCESCAN",
        "FORCESEEK",
        "FORMATFILE",
        "formedness",
        "FORXML",
        "Fulltext",
        "Hijri",
        "HKLM",
        "HOLDLOCK",
        "Httpapi",
        "IDREF",
        "IDREFS",
        "indexability",
        "INDEXKEY",
        "initonly",
        "LCID",
        "listextendedproperty",
        "lockres",
        "marshallers",
        "Masha",
        "mathoma",
        "MAXDOP",
        "metaproperty",
        "MSDTC",
        "MSXMLSQL",
        "MVID",
        "nchar",
        "NCLOB",
        "nillable",
        "NMTOKEN",
        "NMTOKENS",
        "NOEXPAND",
        "NOLOCK",
        "Nonclustered",
        "nonnull",
        "nonpersisted",
        "ntext",
        "ntile",
        "NUMA",
        "NUMANODE",
        "nvarchar",
        "OLEDB",
        "OPENXML",
        "ordpath",
        "pinvokeimpl",
        "pmem",
        "Polybase",
        "preparedocument",
        "procname",
        "RAISERROR",
        "randolphwest",
        "READEXT",
        "READTEXT",
        "READUNCOMMITTED",
        "redeclared",
        "refreshview",
        "reindex",
        "removedocument",
        "REMSERVER",
        "rescan",
        "RMID",
        "rowdump",
        "ROWGUIDCOL",
        "rowset",
        "ROWTERMINATOR",
        "RPCSS",
        "S_PGID",
        "savepoint",
        "SETUSER",
        "SGAM",
        "showplan",
        "SHRINKDB",
        "smallint",
        "Spid",
        "SQLOLEDB",
        "sqltypes",
        "subaggregates",
        "Subproc",
        "subquery",
        "syslanguages",
        "tableoption",
        "TABLESAMPLE",
        "TABLOCK",
        "TAGID",
        "TAGNAME",
        "textptr",
        "TSQL",
        "uniqueidentifier",
        "unmanaged",
        "UNPIVOT",
        "updateextendedproperty",
        "UPDATETEXT",
        "VARBINARY",
        "VARCHAR",
        "Waitfor",
        "WEBMETHOD",
        "widechar",
        "wordbreaker",
        "WRITETEXT",
        "XACT",
        "xlog",
        "XMLDATA",
        "XMLDB",
        "XMLNAMESPACES",
        "XMLNODEREFS",
        "xmlrw",
        "XMLSCHEMA",
        "XMLTEXT",
        "XMLUNNEST",
        "XSINIL"
    ],
    "ignoreWords": [
        "HRESULT",
        "keepfulltextindexfile",
        "sp_help_fulltext_catalog_components",
        "sp_help_fulltext_system_components",
        "tempdb",
        "filegrowth",
        "msdb",
        "datepart",
        "DBCC",
        "CHECKDB",
        "XMLDT",
        "ALL_ERRORMSGS",
        "alloc",
        "freetext",
        "containstable",
        "freetexttable",
        "MSFTESQL",
        "OpenRowset",
        "useself"
    ],
    "patterns": [
        {
            "name": "Markdown links",
            "pattern": "\\((.*)\\)",
            "description": ""
        },
        {
            "name": "Markdown code blocks",
            "pattern": "/^(\\s*`{3,}).*[\\s\\S]*?^\\1/gmx",
            "description": "Taken from the cSpell example at https://cspell.org/configuration/patterns/#verbose-regular-expressions"
        },
        {
            "name": "Inline code blocks",
            "pattern": "\\`([^\\`\\r\\n]+?)\\`",
            "description": "https://stackoverflow.com/questions/41274241/how-to-capture-inline-markdown-code-but-not-a-markdown-code-fence-with-regex"
        },
        {
            "name": "Link contents",
            "pattern": "\\<a(.*)\\>",
            "description": ""
        },
        {
            "name": "Snippet references",
            "pattern": "-- snippet:(.*)",
            "description": ""
        },
        {
            "name": "Snippet references 2",
            "pattern": "\\<\\[sample:(.*)",
            "description": "another kind of snippet reference"
        },
        {
            "name": "Multi-line code blocks",
            "pattern": "/^\\s*```[\\s\\S]*?^\\s*```/gm"
        },
        {
            "name": "HTML Tags",
            "pattern": "<[^>]*>",
            "description": "Reference: https://stackoverflow.com/questions/11229831/regular-expression-to-remove-html-tags-from-a-string"
        },
        {
            "name": "UID Lines",
            "pattern": "uid: (.*)"
        }
    ],
    "ignoreRegExpList": [
        "Markdown links",
        "Markdown code blocks",
        "Inline code blocks",
        "Link contents",
        "Snippet references",
        "Snippet references 2",
        "Multi-line code blocks",
        "HTML Tags",
        "UID Lines"
    ]
}
